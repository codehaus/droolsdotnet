# Example DRL with only a package decl
#

// yes, you can use silly java comments

package org.drools.lang; 

# semi colons are optional, we're line-centric

import java.util.List
import java.util.ArrayList;

# use expanders for domain specific and pseudo natural language extensions
# use expander foo;


rule find seating

	salience 30
	no-loop true

    when
	    context => Context( state == Context.ASSIGN_SEATS ) 
	    Seating( seatingId:id, seatingPid:pid, pathDone == true, seatingRightSeat:rightSeat, seatingRightGuestName:rightGuestName )
	    
        Guest( name == seatingRightGuestName, rightGuestSex:sex, rightGuestHobby:hobby )
        Guest( leftGuestName:name , sex != rightGuestSex, hobby == rightGuestHobby )
        count => Count()
        #not ( Path( id == seatingId, guestName == leftGuestName) )
        #not ( Chosen( id == seatingId, guestName == leftGuestName, hobby == rightGuestHobby) )
    then
        make a ruckus, damnit
        Really, you should
        #following should be expanded using the consequence expander...
        modify ( anObject );
end







